name: Semantic Release Firefox Add-on CICD

on:
  push:
    branches:
      - master
  pull_request:


env:
  CI: 1
  ARTIFACT_DIR: ./artifacts
  DEFAULT_NODE_VERSION: lts/gallium

jobs:
  commit-watch:
    name: Run Commit Watch
    runs-on: ubuntu-20.04
    if: "github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v3.1.0
          with:
            ref: ${{ github.event.pull_request.head.sha }}
            fetch-depth: 0
        - uses: ./.github/actions/setup-env
        - name: Run Commit Watch
          env:
            COMMIT_WATCH_OUTPUT_DIR: ${{ env.ARTIFACT_DIR }}/
            COMMITWATCH_GITHUB_TOKEN: ${{ secrets.TOPHAT_BOT_GH_TOKEN }}
            CI_REPO_OWNER: ${{ github.repository_owner }}
            CI_REPO_NAME: ${{ github.event.repository.name }}
            CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
            CI_BASE_BRANCH: origin/${{ github.base_ref }}
          run: yarn dlx commit-watch
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: commit-watch-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
        - uses: actions/checkout@v3.1.0
          with:
            fetch-depth: 0
        - uses: ./.github/actions/setup-env
        - name: Linting
          run: yarn lint
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: reports-and-build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  tests:
    name: Tests
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        node: ['lts/gallium']
    steps:
        - uses: actions/checkout@v3.1.0
          with:
            fetch-depth: 0
        - uses: ./.github/actions/setup-env
          with:
            node-version: ${{ matrix.node }}
        - name: Tests
          run: yarn test-coverage
        - name: Upload Coverage Report
          if: matrix.node == env.DEFAULT_NODE_VERSION
          run: ./.github/codecov.sh $GITHUB_EVENT_PATH
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: reports-and-build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  e2e:
    name: E2Es
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        node: ['lts/gallium']
    steps:
        - uses: actions/checkout@v3.1.0
          with:
            fetch-depth: 0
        - uses: ./.github/actions/setup-env
          with:
            node-version: ${{ matrix.node }}
        - name: Build
          run: yarn run prepack
        - name: Tests
          run: cd e2e && yarn test-e2e
        - name: Upload Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: reports-and-build-artifacts
            path: ${{ env.ARTIFACT_DIR }}
  release:
    name: Publish Packages
    runs-on: ubuntu-20.04
    if: "github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')"
    needs:
      - commit-watch
      - e2e
      - tests
    steps:
        - uses: actions/checkout@v3.1.0
          with:
            token: ${{ secrets.TOPHAT_BOT_GH_TOKEN }}
            fetch-depth: 0
        - uses: ./.github/actions/setup-env
        - name: Publish Package
          id: publish
          if: github.ref == 'refs/heads/master'
          env:
            NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
            GH_TOKEN: ${{ secrets.TOPHAT_BOT_GH_TOKEN }}
          run: |
            yarn monodeploy \
              --log-level 0 \
              --plugins @monodeploy/plugin-github \
              --push \
              --changeset-ignore-patterns '**/*.test.*' \
              --conventional-changelog-config @tophat/conventional-changelog-config \
              --auto-commit \
              --auto-commit-message "chore: release [skip ci]" \
              --changelog-filename "<packageDir>/CHANGELOG.md" \
              --persist-versions
        - name: Upload Artifacts
          if: ${{ always() }}
          uses: actions/upload-artifact@v3
          with:
            name: reports-and-build-artifacts
            path: |
                ${{ env.ARTIFACT_DIR }}
