name: Node CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
      fail-fast: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup Yarn
      run: |
        curl -s https://raw.githubusercontent.com/tophat/yvm/v3.6.6/scripts/install.js | INSTALL_VERSION="v3.6.6" node
        source ~/.yvm/yvm.sh
    - name: Install
      run: |
        yarn install --frozen-lockfile --ci
    - uses: actions/upload-artifacts@v1
      if: success()
      with:
        name: ${{ hashFiles('yarn.lock') }}
        path: node_modules
    - name: Lint
      run: |
        yarn lint
    - name: Test
      run: |
        yarn test-coverage
    - name: Build
      run: |
        yarn build
    - uses: actions/upload-artifact@v1
      if: success()
      with:
        name: artifacts
        path: artifacts

  report:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
      fail-fast: true
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/download-artifacts@v1
      with:
        name: ${{ hashFiles('yarn.lock') }}
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Report
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        yarn report-coverage

  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
      fail-fast: true
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/download-artifacts@v1
      with:
        name: ${{ hashFiles('yarn.lock') }}
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Release
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        yarn release
