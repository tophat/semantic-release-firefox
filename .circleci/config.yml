version: 2.1

# Defaults: shared across jobs

defaults: &defaults
    docker:
        - image: circleci/node:latest
    working_directory: ~/repo

# Commands: reusable command steps that jobs can run

commands:
  prep:
    description: "Prepares environment"
    steps:
        - checkout:
            path: ~/repo

        - restore_cache:
            name: Restore cache
            key: forest-tree-{{ .Branch }}-{{ checksum "yarn.lock" }}{{ .Environment.CACHE_KEY }}

        - run:
            name: "Install yvm"
            command: "curl -s https://raw.githubusercontent.com/tophat/yvm/master/scripts/install.js | node"

  cache:
    description: "Cache environment"
    steps:
      - save_cache:
          name: Save cache
          key: forest-tree-{{ .Branch }}-{{ checksum "yarn.lock" }}{{ .Environment.CACHE_KEY }}
          paths:
            - ~/.yvm/
            - ./node_modules/

# Jobs: tasks that your CI pipeline can do

jobs:
    setup:
        <<: *defaults
        steps:
            - prep
            - run: yarn install --frozen-lockfile --ci
            - cache

    lint:
        <<: *defaults
        steps:
            - prep
            - run: yarn lint

    test:
        <<: *defaults
        steps:
            - prep
            - run: yarn test-coverage
            - run: cd e2e && yarn test-e2e
            - persist_to_workspace:
                root: ~/repo
                paths:
                  - ./artifacts

    report:
        <<: *defaults
        steps:
            - prep
            - attach_workspace:
                at: ~/repo
            - run: yarn report-coverage
            - store_test_results:
                path: ./artifacts/coverage

    build:
        <<: *defaults
        steps:
            - prep
            - run: yarn build
            - persist_to_workspace:
                root: ~/repo
                paths:
                  - ./artifacts

    deploy:
        <<: *defaults
        steps:
            - prep
            - attach_workspace:
                at: ~/repo
            - run: yarn release

# Workflows: stringing jobs together into a pipeline

workflows:
    version: 2
    blitz:
        jobs:
            - setup
            - lint:
                requires:
                    - setup
            - test:
                requires:
                    - setup
            - report:
                requires:
                    - test
            - build:
                requires:
                    - setup
            - deploy:
                requires:
                    - lint
                    - test
                    - build
                # *
                # The deploy job uses semantic-release which filters by branch
                # It runs in dry mode when the branch does not match master
                # This is useful for catching release misconfigurations
                # See: `yarn release`
                # *
                # filters:
                #     branches:
                #         only:
                #             - master
